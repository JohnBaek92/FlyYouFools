{"version":3,"sources":["webpack:///webpack/bootstrap cc8426f6c2da8290d9e7","webpack:///./lib/game.js","webpack:///./lib/flyYouFools.js","webpack:///./lib/gimli.js","webpack:///./lib/platform.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,WAAW;AAC3C,kCAAkC,WAAW;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;;;AAGJ,eAAe,6BAA6B;AAC5C,mBAAmB,2BAA2B;AAC9C;AACA;;;;;;;ACtHA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;ACLD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACjOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cc8426f6c2da8290d9e7","const Platform = require(\"./platform.js\");\nconst Gimli = require(\"./gimli.js\");\n\n\nconst canvasWidth = 1000;\nconst canvasHeight = 400;\nconst numPlatforms = 2;\nconst FPS = 30;\n\nclass Game {\n  constructor() {\n    this.canvas = document.getElementById(\"game-canvas\");\n    this.ctx = this.canvas.getContext('2d');\n\n\n    this.score = 0;\n    this.gameOver = false;\n    this.gameStarted = false;\n\n    window.platforms = this.platforms;\n    this.platforms = [];\n    this.canvasYSeperator = [[45,100], [101, 200], [201, 300], [301, 330]];\n    this.canvasXSeperator = [[0,250], [201,500], [501, 750], [751,1000]];\n\n    this.gameLoop = this.gameLoop.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n  }\n\n  startGame(e){\n    if(e.key === \"Enter\") {\n      this.createPlatforms();\n      this.gimli = new Gimli(this, this.ctx, this.platforms);\n      window.addEventListener(\"keydown\", this.gimli.gimliMovements, false);\n      window.addEventListener(\"keyup\", this.gimli.gimliStop, false);\n      this.gameLoop();\n    }\n  }\n\n  clearCanvas() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  createPlatforms() {\n    let randomX;\n    let randomY;\n    for(let i = 0; i < numPlatforms; i++) {\n      randomX = this.canvasXSeperator[Math.floor(Math.random()*this.canvasXSeperator.length)];\n      randomY = this.canvasYSeperator[Math.floor(Math.random()*this.canvasYSeperator.length)];\n      let x = this.randomNumber(randomX[0], randomX[1]);\n      let y = this.randomNumber(randomY[0], randomY[1]);\n      if(this.platforms.length !== 0 && this.canvasYSeperator.length !== 0) {\n        randomX = this.canvasXSeperator[Math.floor(Math.random()*this.canvasXSeperator.length)];\n        randomY = this.canvasYSeperator[Math.floor(Math.random()*this.canvasYSeperator.length)];\n        x = this.randomNumber(randomX[0], randomX[1]);\n        y = this.randomNumber(randomY[0], randomY[1]);\n        }\n      let newPlatform = new Platform(x, y, this.canvas, this.ctx);\n      this.platforms.push(newPlatform);\n    }\n  }\n\n  drawGimli() {\n    this.gimli.drawGimli();\n  }\n\n  gameLoop() {\n    if(this.gameOver === false) {\n      this.clearCanvas();\n      this.updateScore();\n      for(let i = 0; i < this.platforms.length; i++) {\n        this.platforms[i].updatePlatform();\n      }\n      this.drawGimli();\n      this.gimli.update();\n      window.requestAnimationFrame(this.gameLoop);\n    } else {\n      this.clearCanvas();\n      console.log('gameOver');\n    }\n  }\n\n  updateScore() {\n    this.ctx.font = \"27px Arial\";\n    this.ctx.fillText(`score: ${this.score}`, 430, 25);\n    this.ctx.strokeText(`score: ${this.score}`, 430, 25);\n    this.score += 1;\n  }\n}\n\nmodule.exports = Game;\n\n// this.platforms.forEach((el, idx1) => {\n//   if(el.x+250 < x && el.x-250 > x) {\n//     debugger\n//     if(x + 120 > canvasWidth) {\n//       x -= 120;\n//     } else {\n//       x += 120;\n//     }\n//   if(el.y+100 < y && el.y-100 > y) {\n//     if(y + 70 > canvasHeight) {\n//       y -= 70;\n//     } else {\n//       y += 70;\n//     }\n//   }\n// }\n// });\n\n\n// for(let i=0; i < this.platforms.length-1; i++) {\n//   for(let j=i+1; j < this.platforms.length; j++) {\n//     if(this.platforms[i].x+250 < this.platforms[j].x && this.platforms[i]-250 > this.platforms[j]\n//   }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","const Game = require(\"./game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const newGame = new Game();\n  document.addEventListener(\"keydown\", newGame.startGame.bind(newGame), false);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/flyYouFools.js\n// module id = 1\n// module chunks = 0","const canvasWidth = 1000;\nconst canvasHeight = 400;\nconst platformWidth = 375;\nconst platformHeight = 10;\n\n\nclass Gimli {\n  constructor(game, ctx, platforms) {\n    this.ctx = ctx;\n    this.game = game;\n    this.platforms = platforms;\n    this.frames = 0;\n    this.idle = false;\n    this.gravity = 0.06;\n    this.gravitySpeed = 0;\n    this.velX = 0;\n    this.velY = 0;\n    this.score = 0;\n    this.gimli = {\n      spriteWalkCounter: 0,\n      spriteJumpCounter: 0,\n      spriteIdleCounter: 0,\n      x: 0,\n      y: 0,\n      width: 2,\n      height: 2,\n      jumping: false,\n      walking: false,\n      src: \"assets/gimliWalks.png\"\n    };\n\n    this.spriteIdleAnimation = [\n      {\n        x: 2,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n      {\n        x: 42,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n\n      {\n        x: 82,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 122,\n        y: 4,\n        width: 37,\n        height: 45,\n      }\n    ];\n\n    this.spriteWalkArray = [\n      {\n        x: 2,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n      {\n        x: 42,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n\n      {\n        x: 82,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 122,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 166,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 206,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n    ];\n\n    this.spriteJumpArray = [\n      {\n        x: 246,\n        y: 4,\n        width: 37,\n        height: 45\n      },\n      {\n        x: 286,\n        y: 4,\n        width: 46,\n        height: 45\n      },\n      {\n        x: 333,\n        y: 4,\n        width: 60,\n        height: 53\n      },\n    ];\n\n    this.gimliMovements = this.gimliMovements.bind(this);\n    this.gimliStop = this.gimliStop.bind(this);\n    this.checkPlatformCollision = this.checkPlatformCollision.bind(this);\n  }\n\n  update(){\n    console.log(this.velY);\n    this.checkPlatformCollision();\n    this.frames++\n    if (this.frames > 5) {\n      this.idle = true;\n    }\n\n    if (this.idle){\n      this.gimli.spriteIdleCounter += 0.05;\n    }\n\n    this.gimli.y += this.velY;\n    console.log(this.gimli.x);\n    this.velY += this.gravity;\n    if (this.gimli.y < 0) {\n      this.gimli.y = 0;\n      this.velY = 0;\n    }\n    if (this.gimli.x < 0) {\n     this.gimli.x = 1;\n    }\n   if (this.gimli.y + this.gimli.height > 400) {\n    this.game.gameOver = true;\n    }\n    if (this.gimli.x + canvasWidth > 0 || this.gimli.x + canvasWidth < canvasWidth) {\n     this.gimli.x += this.velX;\n   }\n  }\n\n  drawGimli() {\n    this.frame++;\n    let img = new Image();\n    img.src = this.gimli.src;\n    if (this.gimli.jumping){\n    this.ctx.drawImage(img, this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].x,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].y,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].width,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].height,\n      this.gimli.x, this.gimli.y, 80, 80);\n    } else if (this.idle ){\n      this.ctx.drawImage(img, this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].x,\n        this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].y,\n        this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].width,\n        this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].height,\n        this.gimli.x, this.gimli.y, 80, 80);\n    } else {\n    this.ctx.drawImage(img, this.spriteWalkArray[this.gimli.spriteWalkCounter % 4].x,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].y,\n      this.spriteWalkArray[this.gimli.spriteWalkCounter % 4].width,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].height,\n      this.gimli.x, this.gimli.y, 80, 80);\n    }\n  }\n\n  jumpAnimation(){\n    this.gimli.jumping = true;\n    setTimeout(() => {\n      this.gimli.spriteJumpCounter ++;\n      setTimeout(() => {\n        this.gimli.spriteJumpCounter ++;\n        this.gimli.jumping = false;\n        this.gimli.spriteJumpCounter = 0;\n      }, 400);\n    }, 90);\n  }\n\n  gimliMovements(e) {\n    switch(e.keyCode) {\n      case 32: //space bar\n        this.velY -= 7;\n        this.idle = false;\n        this.jumpAnimation();\n        break;\n    }\n  }\n\n\n\n  gimliStop(e) {\n    this.frames = 0;\n  }\n\n  checkPlatformCollision() {\n    for (let i = 0; i < this.platforms.length; i++) {\n      if(this.velY > 0 &&\n        (this.gimli.y + this.gimli.height > this.platforms[i].y -65) &&\n        (this.gimli.y + this.gimli.height < this.platforms[i].y + platformHeight -65) &&\n        (this.gimli.x + this.gimli.width > this.platforms[i].x) &&\n        (this.gimli.x < this.platforms[i].x + platformWidth))\n        {\n          this.gimli.y = this.platforms[i].y - 62;\n          this.velY = 0;\n        }\n        else {\n        }\n    }\n  }\n}\n\nmodule.exports = Gimli;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gimli.js\n// module id = 2\n// module chunks = 0","const platformColor = \"rgba(120,120,120,1)\";\nconst canvasWidth = 1000;\nconst canvasHeight = 400;\nconst platformWidth = 375;\nconst platformHeight = 10;\n\nclass Platform {\n  constructor(x, y, canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.xVel = 2;\n\n    this.drawPlatform = this.drawPlatform.bind(this);\n  }\n\n  randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  updatePlatform(){\n    this.x -= this.xVel;\n    if(this.x < -375) {\n      if(this.y > 45 && this.y < 100) {\n        this.y = this.randomNumber(45, 100);\n      } else if(this.y > 101 && this.y < 200) {\n        this.y = this.randomNumber(101, 200);\n      } else if (this.y > 201 && this.y < 300) {\n        this.y = this.randomNumber(201, 300);\n      } else {\n        this.y = this.randomNumber(301, 330);\n      }\n      this.x = this.x+375 + canvasWidth;\n    }\n    this.drawPlatform();\n  }\n\n  drawPlatform() {\n    this.ctx.beginPath();\n    this.ctx.rect(this.x, this.y, platformWidth, platformHeight);\n    this.ctx.fillStyle = platformColor;\n    this.ctx.fillRect(this.x, this.y, platformWidth, platformHeight);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n}\n\nmodule.exports = Platform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/platform.js\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}