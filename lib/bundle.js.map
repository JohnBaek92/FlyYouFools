{"version":3,"sources":["webpack:///webpack/bootstrap 24ddebf6041d35dadfac","webpack:///./lib/game.js","webpack:///./lib/background.js","webpack:///./lib/flyYouFools.js","webpack:///./lib/gimli.js","webpack:///./lib/platform.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,WAAW;AAC3C,kCAAkC,WAAW;AAC7C;AACA;AACA;;AAEA;;;;;;;AC/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,wCAAwC;AAC1D;AACA;AACA;AACA;;AAEA;;;;;;;;;AC1BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;AC/CD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3OA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 24ddebf6041d35dadfac","const Platform = require(\"./platform.js\");\nconst Gimli = require(\"./gimli.js\");\nconst Background = require(\"./background.js\");\n\nconst platformColor = \"rgba(120,120,120,1)\";\nconst canvasWidth = 1000;\nconst canvasHeight = 400;\nconst platformWidth = 280;\nconst platformHeight = 10;\nconst numPlatforms = 4;\n\nclass Game {\n  constructor(canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n\n    this.background = new Background(this.canvas, this.ctx, 2);\n\n    this.score = 0;\n    this.gameID = 0;\n    this.platformID = 0;\n    this.currentState = \"splashScreen\";\n\n    window.platforms = this.platforms;\n    this.startPlatform = [];\n    this.platforms = [];\n    this.canvasYSeperator = [[45,100], [101, 200], [201, 300], [301, 330]];\n    this.canvasXSeperator = [[150,150], [201,201], [350, 350], [275,275], [75,75]];\n\n    this.gameLoop = this.gameLoop.bind(this);\n    this.splashScreen = this.splashScreen.bind(this);\n    this.clearCanvas = this.clearCanvas.bind(this);\n    this.updateScore = this.updateScore.bind(this);\n    this.pauseGame = this.pauseGame.bind(this);\n    this.drawBackground = this.drawBackground.bind(this);\n    this.createPlatforms = this.createPlatforms.bind(this);\n    this.restarted = false;\n    this.gimli = new Gimli(this, this.ctx, this.platforms, this.startPlatform);\n  }\n\n  startGame(){\n    this.createStartPlatform();\n    this.platformID = setTimeout(() => this.createPlatforms() , 500);\n  }\n\n  clearCanvas() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  createStartPlatform() {\n    let x = 200;\n    let y = 300;\n    let startPlatform = new Platform(x, y, this.canvas, this.ctx);\n    this.startPlatform.push(startPlatform);\n  }\n\n  createPlatforms() {\n    let x;\n    let y;\n    let xPlacementArray = [canvasWidth+280, canvasWidth+520, canvasWidth+840, canvasWidth+1120];\n    let yPlacementArray = [300, 250, 200, 150];\n    for(let i = 0; i < numPlatforms; i++) {\n      x = xPlacementArray.pop();\n      y = yPlacementArray.pop();\n      let newPlatform = new Platform(x, y, this.canvas, this.ctx);\n      this.platforms.push(newPlatform);\n    }\n  }\n\n  drawGimli() {\n    this.gimli.drawGimli();\n  }\n\n  drawBackground() {\n    this.background.update();\n    this.background.render();\n  }\n\n  splashScreen() {\n    const img = new Image();\n    img.src = \"assets/gandalf.jpg\";\n    this.ctx.drawImage(img, 0, 0, 502, 294, 0, 0, canvasWidth, canvasHeight);\n  }\n\n  pauseGame() {\n    if (this.currentState === 'gameOn') {\n      this.currentState = 'paused';\n    } else {\n      this.gameID = window.requestAnimationFrame(this.gameLoop);\n      this.currentState = 'gameOn';\n    }\n  }\n\n  restart() {\n    clearTimeout(this.platformID);\n    this.platforms = [];\n    this.startPlatform = [];\n    this.gimli = null;\n    this.restarted = true;\n    this.gimli = new Gimli(this, this.ctx, this.platforms, this.startPlatform);\n    this.startGame();\n    this.score = 0;\n\n  }\n\n  gameOn() {\n    this.clearCanvas();\n    this.drawBackground();\n    this.updateScore();\n    if(this.score < 250 && this.startPlatform[0]) {\n      this.startPlatform[0].updateStartPlatform();\n    }\n    for(let i = 0; i < this.platforms.length; i++) {\n      this.platforms[i].updatePlatform(this.score);\n    }\n    this.drawGimli();\n    this.gimli.update();\n  }\n\n  gameOver(){\n    this.clearCanvas();\n    this.currentState = 'gameOver';\n    console.log(\"gameOver\");\n  }\n\n  gameLoop() {\n    switch(this.currentState) {\n      case 'splashScreen':\n        this.splashScreen();\n        break;\n      case 'gameOn':\n        this.gameOn();\n        break;\n      case 'gameOver':\n        this.gameOver();\n        break;\n      default:\n        this.splashScreen();\n    }\n\n    if (this.currentState !== 'paused' ) {\n       this.gameID = window.requestAnimationFrame(this.gameLoop);\n    } else {\n       window.cancelAnimationFrame(this.gameID);\n    }\n  }\n\n  updateScore() {\n    this.ctx.font = \"27px sans-serif\";\n    this.ctx.fillText(`score: ${this.score}`, 430, 25);\n    this.ctx.strokeText(`score: ${this.score}`, 430, 25);\n    this.score += 1;\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 0\n// module chunks = 0","class Background {\n  constructor(canvas, ctx, speed) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.xPos = 0;\n    this.speed = speed;\n    this.width = 1413;\n    this.height = 450;\n    this.backgroundImage = new Image();\n    this.backgroundImage.src = 'assets/dungeon.jpg';\n  }\n\n  update() {\n    this.xPos -= this.speed;\n    if (this.xPos < -this.width) {\n      this.xPos = 0;\n    }\n  }\n\n  render() {\n    for(let i = 0; i < this.canvas.width / this.width + 1; i++) {\n      this.ctx.drawImage(this.backgroundImage, this.xPos + i * this.width, 0);\n    }\n  }\n}\n\nmodule.exports = Background;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/background.js\n// module id = 1\n// module chunks = 0","// const Game = require(\"./game.js\");\n//\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const newGame = new Game();\n//   debugger\n//   document.addEventListener(\"keydown\", newGame.startGame.bind(newGame), false);\n// });\n\n\nimport Game from './game.js';\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById('game-canvas');\n  const ctx = canvas.getContext('2d');\n  canvas.width = 1000;\n  canvas.height = 400;\n  const game = new Game(canvas, ctx);\n  game.gameLoop();\n\n  document.addEventListener('keydown', (e) => {\n    switch (e.keyCode) {\n      case 13:\n        if(game.currentState === 'splashScreen') {\n          game.currentState = 'gameOn';\n          game.startGame();\n        }\n        break;\n      case 80:\n          game.pauseGame();\n        break;\n      case 82:\n      debugger\n        if(game.currentState === 'gameOver') {\n          console.log(\"restart\");\n          game.currentState = 'gameOn';\n          game.restart();\n        }\n        break;\n      case 32:\n      if (game.currentState === 'gameOn') {\n        game.gimli.gimliMovements();\n      }\n        break;\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/flyYouFools.js\n// module id = 2\n// module chunks = 0","const canvasWidth = 1000;\nconst canvasHeight = 400;\nconst platformWidth = 375;\nconst platformHeight = 10;\nconst startPlatformWidth = 1000;\n\nclass Gimli {\n  constructor(game, ctx, platforms, startPlatform) {\n    this.ctx = ctx;\n    this.game = game;\n    this.startPlatform = startPlatform;\n    this.platforms = platforms;\n    this.frames = 0;\n    this.idle = false;\n    this.gravity = 0.20;\n    this.gravitySpeed = 0;\n    this.velX = 0;\n    this.velY = 0;\n    this.score = 0;\n    this.gimli = {\n      spriteWalkCounter: 0,\n      spriteJumpCounter: 0,\n      spriteIdleCounter: 0,\n      x: 0,\n      y: 0,\n      width: 2,\n      height: 2,\n      canJump: false,\n      jumping: false,\n      walking: false,\n      src: \"assets/gimliWalks.png\"\n    };\n\n    this.spriteIdleAnimation = [\n      {\n        x: 2,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n      {\n        x: 42,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n\n      {\n        x: 82,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 122,\n        y: 4,\n        width: 37,\n        height: 45,\n      }\n    ];\n\n    this.spriteWalkArray = [\n      {\n        x: 2,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n      {\n        x: 42,\n        y: 4,\n        width: 39,\n        height: 45,\n      },\n\n      {\n        x: 82,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 122,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 166,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n      {\n        x: 206,\n        y: 4,\n        width: 37,\n        height: 45,\n      },\n    ];\n\n    this.spriteJumpArray = [\n      {\n        x: 246,\n        y: 4,\n        width: 37,\n        height: 45\n      },\n      {\n        x: 286,\n        y: 4,\n        width: 46,\n        height: 45\n      },\n      {\n        x: 333,\n        y: 4,\n        width: 60,\n        height: 53\n      },\n    ];\n\n    this.gimliMovements = this.gimliMovements.bind(this);\n    this.gimliStop = this.gimliStop.bind(this);\n    this.checkPlatformCollision = this.checkPlatformCollision.bind(this);\n  }\n\n  update(){\n    this.checkPlatformCollision();\n    this.frames++;\n    if (this.frames > 5) {\n      this.idle = true;\n    }\n\n    if (this.idle){\n      this.gimli.spriteIdleCounter += 0.05;\n    }\n\n    this.gimli.y += this.velY;\n    this.velY += this.gravity;\n    if (this.gimli.y < 0) {\n      this.gimli.y = 0;\n      this.velY = 0;\n    }\n   if (this.gimli.y + this.gimli.height > 400) {\n    this.game.currentState = 'gameOver';\n    }\n  }\n\n  drawGimli() {\n    this.frame++;\n    let img = new Image();\n    img.src = this.gimli.src;\n\n    this.ctx.fillStyle = '#FFFFFF';\n\n    if (this.gimli.jumping){\n    this.ctx.drawImage(img, this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].x,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].y,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].width,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].height,\n      this.gimli.x, this.gimli.y, 80, 80);\n    } else if (this.idle ){\n      this.ctx.drawImage(img, this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].x,\n        this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].y,\n        this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].width,\n        this.spriteIdleAnimation[Math.floor(this.gimli.spriteIdleCounter) % 4].height,\n        this.gimli.x, this.gimli.y, 80, 80);\n    } else {\n    this.ctx.drawImage(img, this.spriteWalkArray[this.gimli.spriteWalkCounter % 4].x,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].y,\n      this.spriteWalkArray[this.gimli.spriteWalkCounter % 4].width,\n      this.spriteJumpArray[this.gimli.spriteJumpCounter % 3].height,\n      this.gimli.x, this.gimli.y, 80, 80);\n    }\n  }\n\n  jumpAnimation(){\n    setTimeout(() => {\n      this.gimli.spriteJumpCounter ++;\n      setTimeout(() => {\n        this.gimli.spriteJumpCounter ++;\n        this.gimli.jumping = false;\n        this.gimli.spriteJumpCounter = 0;\n      }, 400);\n    }, 90);\n  }\n\n  gimliMovements(e) {\n    if(this.gimli.canJump === true) {\n        this.velY -= 7;\n        this.idle = false;\n        this.gimli.canJump = false;\n        this.jumpAnimation();\n      }\n    }\n\n\n\n  gimliStop(e) {\n    this.frames = 0;\n  }\n\n  checkPlatformCollision() {\n    if(this.startPlatform[0]) {\n      if(this.velY > 0 &&\n        (this.gimli.y + 80 >= this.startPlatform[0].y) &&\n        (this.gimli.y + 80 <= this.startPlatform[0].y + platformHeight) &&\n        (this.gimli.x + 80 >= this.startPlatform[0].x) &&\n        (this.gimli.x <= this.startPlatform[0].x + startPlatformWidth))\n        {\n          this.gimli.y = this.startPlatform[0].y - 80;\n          this.velY = 0;\n          this.gimli.canJump = true;\n        }\n        else {\n      }\n    }\n    for (let i = 0; i < this.platforms.length; i++) {\n      if(this.velY > 0 &&\n        (this.gimli.y + 80 >= this.platforms[i].y) &&\n        (this.gimli.y + 80 <= this.platforms[i].y + platformHeight) &&\n        (this.gimli.x + 80 >= this.platforms[i].x) &&\n        (this.gimli.x <= this.platforms[i].x + platformWidth))\n        {\n          this.gimli.y = this.platforms[i].y - 80;\n          this.velY = 0;\n          this.gimli.canJump = true;\n        }\n        else {\n        }\n    }\n  }\n}\n\nmodule.exports = Gimli;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/gimli.js\n// module id = 3\n// module chunks = 0","const platformColor = \"rgba(120,120,120,1)\";\nconst canvasWidth = 1000;\nconst canvasHeight = 400;\nconst platformWidth = 280;\nconst platformHeight = 10;\nconst startPlatformWidth = 1000;\n\nclass Platform {\n  constructor(x, y, canvas, ctx) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.x = x;\n    this.y = y;\n    this.xVel = 5;\n\n    this.drawPlatform = this.drawPlatform.bind(this);\n  }\n\n  randomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  updatePlatform(score){\n    if(score > 1000 && score < 1999) {\n      this.xVel = 7;\n    } else if (score > 2000 && score < 2999) {\n      this.xVel = 9;\n    } else if (score > 3000 && score < 3999) {\n      this.xVel = 11;\n    } else if (score > 4000 && score < 4999) {\n      this.xVel = 13;\n    }\n    this.x -= this.xVel;\n    if(this.x < -280) {\n      this.y = this.randomNumber(130, 300);\n      this.x = this.x+280 + canvasWidth;\n    }\n    this.drawPlatform();\n  }\n\n  updateStartPlatform() {\n    this.x -= this.xVel;\n    this.drawStartPlatform();\n  }\n\n  drawPlatform() {\n    this.ctx.beginPath();\n    this.ctx.rect(this.x, this.y, platformWidth, platformHeight);\n    this.ctx.fillStyle = platformColor;\n    this.ctx.fillRect(this.x, this.y, platformWidth, platformHeight);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  drawStartPlatform(){\n    this.ctx.beginPath();\n    this.ctx.rect(this.x, this.y, startPlatformWidth, platformHeight);\n    this.ctx.fillStyle = platformColor;\n    this.ctx.fillRect(this.x, this.y, startPlatformWidth, platformHeight);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n}\n\nmodule.exports = Platform;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/platform.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}